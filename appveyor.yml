version: '{build}'

#---------------------------------#
#      general configuration      #
#---------------------------------#
branches:
  only:
    - master
    - devel
  except:
    - gh-pages
skip_tags: true

#---------------------------------#
#    environment configuration    #
#---------------------------------#
platform: Any CPU
environment:
  matrix:
  - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2013
    COMPILER: mingw
    TOOLSET: w64-mingw32
    ARCH: i686
    GENERATOR: '"MinGW Makefiles"'
    MINGW_DIR_BIN: C:\mingw-w64\i686-6.3.0-posix-dwarf-rt_v5-rev1\mingw32\bin
    CMAKE_C_COMPILER: C:/mingw-w64/i686-6.3.0-posix-dwarf-rt_v5-rev1/mingw32/bin/gcc.exe
    CMAKE_CXX_COMPILER: C:/mingw-w64/i686-6.3.0-posix-dwarf-rt_v5-rev1/mingw32/bin/g++.exe
  - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2013
    COMPILER: mingw
    TOOLSET: w64-mingw32
    ARCH: x86_64
    GENERATOR: '"MinGW Makefiles"'
    MINGW_DIR_BIN: C:\mingw-w64\x86_64-6.3.0-posix-seh-rt_v5-rev1\mingw64\bin
    CMAKE_C_COMPILER: C:/mingw-w64/x86_64-6.3.0-posix-seh-rt_v5-rev1/mingw64/bin/gcc.exe
    CMAKE_CXX_COMPILER: C:/mingw-w64/x86_64-6.3.0-posix-seh-rt_v5-rev1/mingw64/bin/g++.exe
#  - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2013
#    TOOLSET: vc12
#    ARCH: win32
#    GENERATOR: '"Visual Studio 12 2013"'
#  - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2013
#    TOOLSET: vc12
#    ARCH: win64
#    GENERATOR: '"Visual Studio 12 2013 Win64"'
#  - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
#    TOOLSET: vc14
#    ARCH: win32
#    GENERATOR: '"Visual Studio 14 2015"'
#  - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
#    TOOLSET: vc14
#    ARCH: win64
#    GENERATOR: '"Visual Studio 14 2015 Win64"'
#  - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
#    TOOLSET: vc15
#    ARCH: win32
#    GENERATOR: '"Visual Studio 15 2017"'
#  - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
#    TOOLSET: vc15
#    ARCH: win64
#    GENERATOR: '"Visual Studio 15 2017 Win64"'

#---------------------------------#
#            steps                #
#---------------------------------#
install:
  - cmd: curl -k -o next_git_tag.bat https://gist.githubusercontent.com/matusnovak/eba81343f5578c38cf0a9bc22b548727/raw/e3745d1cda3391a7cf30c7478e91297d7e2b4243/next_git_tag.bat
  - cmd: git submodule init
  - cmd: git submodule update
  - cmd: if [%COMPILER%]==[mingw] (mkdir build-debug)
  - cmd: if [%COMPILER%]==[mingw] (mkdir build-release)
  - cmd: set PATH=%PATH:C:\Program Files\Git\usr\bin;=%
  - cmd: set PATH=%MINGW_DIR_BIN%;%PATH%
  - cmd: if [%COMPILER%]==[mingw] (cd build-debug & cmake .. -G %GENERATOR% -DCMAKE_INSTALL_PREFIX="..\install" -DCMAKE_BUILD_TYPE=Debug & cd ..)
  - cmd: if [%COMPILER%]==[mingw] (cd build-release & cmake .. -G %GENERATOR% -DCMAKE_INSTALL_PREFIX="..\install" -DCMAKE_BUILD_TYPE=MinSizeRel & cd ..)
  - cmd: if [%COMPILER%]==[msvc] (cd build & cmake .. -G %GENERATOR% -DCMAKE_INSTALL_PREFIX="..\install" & cd ..)

build_script:
  - cmd: if [%COMPILER%]==[mingw] (cd build-debug & cmake --build . --target all & cd ..)
  - cmd: if [%COMPILER%]==[mingw] (cd build-release & cmake --build . --target all & cd ..)
  - cmd: if [%COMPILER%]==[msvc] (cd build & cmake --build . --target ALL_BUILD --config Debug & cd ..)
  - cmd: if [%COMPILER%]==[msvc] (cd build & cmake --build . --target ALL_BUILD --config MinSizeRel & cd ..)

test_script:
  - cmd: set NON_OPENGL_TESTS=-R test_color -R test_mat3 -R test_mat4 -R test_quaternion -R test_vec2 -R test_vec3 -R test_vec4
  - cmd: if [%COMPILER%]==[mingw] (cd build-debug & ctest --verbose %NON_OPENGL_TESTS% & cd ..)
  - cmd: if [%COMPILER%]==[mingw] (cd build-release & ctest --verbose %NON_OPENGL_TESTS% & cd ..)
  - cmd: if [%COMPILER%]==[msvc] (cd build & ctest --verbose -C "Debug" %NON_OPENGL_TESTS% & cd ..)
  - cmd: if [%COMPILER%]==[msvc] (cd build & ctest --verbose -C "MinSizeRel" %NON_OPENGL_TESTS% & cd ..)

after_test:
  - cmd: if [%COMPILER%]==[mingw] (cd build-debug & cmake --build . --target install & cd ..)
  - cmd: if [%COMPILER%]==[msvc] (cd build & cmake --build . --target INSTALL --config Debug & cd ..)
  - cmd: ren install debug
  - cmd: if [%COMPILER%]==[mingw] (cd build-release & cmake --build . --target install & cd ..)
  - cmd: if [%COMPILER%]==[msvc] (cd build & cmake --build . --target INSTALL --config MinSizeRel & cd ..)
  - cmd: ren install release
  - cmd: 7z.exe a "ffw-%ARCH%-%TOOLSET%.zip" .\debug .\release

before_deploy:
  - cmd: call .\next_git_tag.bat

#---------------------------------#
#      artifacts configuration    #
#---------------------------------#
artifacts:
  - path: ffw-*.zip
    name: Compiled

#---------------------------------#
#           deployment            #
#---------------------------------#
deploy:
  description: '$(APPVEYOR_REPO_COMMIT_MESSAGE)\n$(APPVEYOR_REPO_COMMIT_MESSAGE_EXTENDED)'
  tag: $(appveyor_repo_tag_name)
  release: 'FineGraphics - $(appveyor_repo_tag_name)'
  provider: GitHub
  artifact: /.*\.zip/
  draft: false
  prerelease: false
  auth_token:
    secure: Iy3zJbGrOW9X8aiAYoBX+xHl9mlapXwHrLlsHqrlKFGpXapjiv/lQVZZz3npjPTJ
  on:
    branch: devel
    appveyor_repo_tag: false

#---------------------------------#
#         notifications           #
#---------------------------------#
notifications:
  - provider: Email
    to:
      - matusnov@gmail.com
    on_build_success: true
    on_build_failure: true
    on_build_status_changed: true
    